import csv
import requests
import os

def download_exploitdb_csv(url, save_path):
    response = requests.get(url)
    response.raise_for_status()
    with open(save_path, 'wb') as file:
        file.write(response.content)

def parse_exploitdb_csv(csv_file):
    exploits = []
    with open(csv_file, mode='r', encoding='utf-8') as file:
        reader = csv.DictReader(file)
        for row in reader:
            exploit = {
                'id': row['id'],
                'description': row['description'],
                'platform': row['platform'],
                'type': row['type'],
                'date_published': row['date_published']
            }
            exploits.append(exploit)
    return exploits

def save_exploits_to_csv(exploits, output_file):
    keys = exploits[0].keys()
    with open(output_file, mode='w', newline='', encoding='utf-8') as file:
        writer = csv.DictWriter(file, fieldnames=keys)
        writer.writeheader()
        writer.writerows(exploits)

if __name__ == "__main__":
    exploitdb_url = "https://gitlab.com/exploit-database/exploitdb/-/raw/main/files_exploits.csv"
    csv_file_path = "/home/ubuntu/files_exploits.csv"
    output_file_path = "/home/ubuntu/structured_exploits.csv"

    # Download the latest ExploitDB CSV file
    download_exploitdb_csv(exploitdb_url, csv_file_path)

    # Parse the downloaded CSV file
    exploits = parse_exploitdb_csv(csv_file_path)

    # Save the structured data to a new CSV file
    save_exploits_to_csv(exploits, output_file_path)

    print(f"Structured data saved to {output_file_path}")
