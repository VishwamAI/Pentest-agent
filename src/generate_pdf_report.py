import json
from reportlab.lib.pagesizes import letter
from reportlab.pdfgen import canvas

def generate_pdf_report(json_file, pdf_file, lynis_file):
    with open(json_file, 'r') as f:
        data = json.load(f)

    with open(lynis_file, 'r') as f:
        lynis_data = f.readlines()

    c = canvas.Canvas(pdf_file, pagesize=letter)
    width, height = letter

    c.setFont("Helvetica", 12)
    c.drawString(30, height - 30, "Vulnerability Report")
    c.drawString(30, height - 50, "====================")

    y = height - 70
    c.drawString(30, y, "Web Application Vulnerabilities")
    y -= 20
    for item in data:
        c.drawString(30, y, f"Type: {item.get('type', 'N/A')}")
        y -= 20
        c.drawString(30, y, f"URL: {item.get('url', 'N/A')}")
        y -= 20
        if 'payload' in item:
            c.drawString(30, y, f"Payload: {json.dumps(item['payload'])}")
            y -= 20
        c.drawString(30, y, f"Status: {item.get('status', 'N/A')}")
        y -= 20
        c.drawString(30, y, f"Severity: {item.get('severity', 'N/A')}")
        y -= 20
        c.drawString(30, y, f"Recommendation: {item.get('recommendation', 'N/A')}")
        y -= 20
        c.drawString(30, y, f"Remediation: {item.get('remediation', 'N/A')}")
        y -= 20
        c.drawString(30, y, f"Response Time: {item.get('response_time', 'N/A')}")
        y -= 20
        c.drawString(30, y, f"Response Code: {item.get('response_code', 'N/A')}")
        y -= 40  # Add extra space between entries

        if y < 100:  # Check if we need to add a new page
            c.showPage()
            c.setFont("Helvetica", 12)
            y = height - 30

    c.drawString(30, y, "Operating System Vulnerabilities")
    y -= 20
    for line in lynis_data:
        if line.strip():
            c.drawString(30, y, line.strip())
            y -= 20
            if y < 100:  # Check if we need to add a new page
                c.showPage()
                c.setFont("Helvetica", 12)
                y = height - 30

    c.save()

if __name__ == "__main__":
    generate_pdf_report("scan_results.json", "vulnerability_report.pdf", "/home/ubuntu/full_outputs/sudo_lynis_audit_sys_1719882552.005578.txt")
