import unittest
import sys
import os

# Adjust the Python path to include the src directory
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../src')))

from web_pentest_agent import WebPentestAgent

class TestWebPentestAgent(unittest.TestCase):
    def setUp(self):
        self.agent = WebPentestAgent("http://testphp.vulnweb.com")  # Updated URL for testing

    def test_crawl(self):
        endpoints = self.agent.crawl()
        self.assertIsInstance(endpoints, set)
        self.assertGreater(len(endpoints), 0)

    def test_analyze_security_headers(self):
        security_headers = self.agent.analyze_security_headers("http://testphp.vulnweb.com")
        self.assertIsInstance(security_headers, dict)
        self.assertIn('Content-Security-Policy', security_headers)
        self.assertIn('X-Content-Type-Options', security_headers)
        self.assertIn('X-Frame-Options', security_headers)
        self.assertIn('Strict-Transport-Security', security_headers)
        self.assertIn('X-XSS-Protection', security_headers)

    def test_sql_injection(self):
        vulnerable = self.agent.test_sql_injection("http://testphp.vulnweb.com")
        self.assertIsInstance(vulnerable, bool)

    def test_xss(self):
        vulnerable = self.agent.test_xss("http://testphp.vulnweb.com")
        self.assertIsInstance(vulnerable, bool)

    def test_csrf(self):
        vulnerable = self.agent.test_csrf("http://testphp.vulnweb.com")
        self.assertIsInstance(vulnerable, bool)

if __name__ == "__main__":
    unittest.main()
